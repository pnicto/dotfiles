# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
PATH=$PATH:/home/hans/.local/bin/scripts:/home/hans/go/bin

# Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"
export ZSH="$XDG_DATA_HOME/oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
# export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git ansible archlinux python docker docker-compose npm golang gitignore fast-syntax-highlighting zsh-history-substring-search alias-tips fzf aliases autoswitch_virtualenv poetry asdf autoupdate git-auto-fetch zsh-autosuggestions)

fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# careful about this
export EDITOR="nvim"
export BROWSER="microsoft-edge-stable"
export GOPATH=~/go/

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Aliases
alias vi=nvim
alias conf=chezmoi
alias c="code ."
alias v="nvim ."
alias xc="xclip -selection clipboard"
alias vm="asdf"
alias wp="wgetpaste -s sprunge"
alias o="xdg-open"
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
alias pn=pnpm
alias lg=lazygit
alias nv="NVIM_APPNAME=vanilla-nvim nvim"
alias sconf="$EDITOR ~/.local/bin/scripts/sessions.json"
alias sshconf="$EDITOR ~/.ssh/config"
alias zshconf="$EDITOR ~/.config/zsh/.zshrc"
alias pcinfo='date;echo;cal;echo -e "$BLUE"------------------------------------------------------$NULL;
df -h;
echo -e "$BLUE"-------------------------------------------------------------------------$NULL;
free -h;
echo -e "$BLUE"-------------------------------------------------------------$NULL;
w;
echo -e "$BLUE"---------------------------$NULL;
ps;
echo -e "$BLUE"-------------------------------------------------------------------------------------$NULL;
'
alias ytdl=yt-dlp
alias task=go-task

# chezmoi
alias cst="chezmoi status"
alias ccd="chezmoi cd"

# alias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[[ ! -f ${ZDOTDIR:-~}/.p10k.zsh ]] || source ${ZDOTDIR:-~}/.p10k.zsh


bindkey -s ^f "fzf-cd\n"
bindkey -s "^[f" "~/.local/bin/scripts/tmux-sessionizer.sh\n"
bindkey -s "^[i" "tmux neww cheat.sh\n"

fzf-cd ()
{
    session_dir=$(find ~ ~/programs/ ~/work/ ~/learning/ ~/scratch/ ~/.local/bin/ ~/.config/ ~/college/ -mindepth 1 -maxdepth 1 -type d | fzf --cycle --layout=reverse)
    cd $session_dir
}

init-repo ()
{
  if [[ $# -eq 0 ]]; then
    echo "Usage: init-repo <visibility> <name>"
    return 1
  fi

  repo_name="$1"
  visibility="public"

  if [[ "$1" == "private" ]]; then
   visibility="private"
   shift
   repo_name="$1"
  fi

  gh repo create "$repo_name" "--$visibility" &&
  gh repo clone "$repo_name" &&
  cd "$repo_name" || exit
}

# To keep home dir clean
export ASDF_DATA_DIR="${XDG_DATA_HOME}"/asdf
export HISTFILE="${XDG_STATE_HOME}"/zsh/history
source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"

# history related
HISTSIZE=10000000
SAVEHIST=10000000

HISTORY_IGNORE="(ls|cd|pwd|exit|warp-cli|shutdown|fzf-cd)*"

setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS     # Do not write a duplicate event to the history file.
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands
setopt HIST_REDUCE_BLANKS    # Remove superfluous blanks from each command line being added to the history.

# pnpm
export PNPM_HOME="/home/hans/.local/share/pnpm"
case ":$PATH:" in
    *":$PNPM_HOME:"*) ;;
    *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"

# task file
eval "$(go-task --completion zsh)"

